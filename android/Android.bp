package {
    default_applicable_licenses: ["external_sqlite_android_license"],
}

// Added automatically by a large-scale-change
// See: http://go/android-license-faq
license {
    name: "external_sqlite_android_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
    ],
    license_text: [
        "NOTICE",
    ],
}

cc_defaults {
    name: "libsqlite3_android_defaults",
    host_supported: true,
    cflags: [
        "-Wall",
        "-Werror",
        "-Wno-unused-function",
        "-Wno-unused-variable",
    ],
    srcs: [
        "PhoneNumberUtils.cpp",
        "OldPhoneNumberUtils.cpp",
        "sqlite3_android.cpp",
    ],
    include_dirs: ["external/sqlite/dist"],
    shared_libs: [
        "liblog",
    ],
    export_include_dirs: ["."],
}

cc_library_static {
    name: "libsqlite3_android",
    defaults: ["libsqlite3_android_defaults"],
    vendor_available: true,
    native_bridge_supported: true,
    target: {
        android: {
            cflags: [
                    "-DSQLITE_ENABLE_ICU",
                    "-DSQLITE_DEFAULT_LEGACY_ALTER_TABLE",
            ],
            shared_libs: [
                "libandroidicu",
            ],
        },
        host: {
            cflags: ["-DSQLITE_ENABLE_ICU"],
            shared_libs: [
                "libicui18n",
                "libicuuc",
            ],
        },
        vendor: {
            cflags: ["-USQLITE_ENABLE_ICU"],
            exclude_shared_libs: ["libandroidicu"],
        },
    },
}

// This static library is variant of libsqlite3_android built without the ICU
// extension.  The library is supposed to be used in environments where the ICU
// extension is not needed and the dependency to ICU (which is as large as 60+
// MB) is not desirable, like microdroid.
cc_library_static {
    name: "libsqlite3_android_noicu",
    defaults: ["libsqlite3_android_defaults"],
    // Not define SQLITE_ENABLE_ICU
}

//       The formal test for phone_number_compare() is in DataBaseGeneralTest.java
//       (as of 2009-08-02), in which phone_number_compare() is tested via sqlite's custom
//       function "PHONE_NUMBER_COMPARE".
cc_test {
    host_supported: true,
    name: "libsqlite3_phone_number_utils_test",
    cflags: [
        "-Wall",
        "-Werror",
    ],
    srcs: [
        "OldPhoneNumberUtils.cpp",
        "OldPhoneNumberUtilsTest.cpp",
        "PhoneNumberUtils.cpp",
        "PhoneNumberUtilsTest.cpp",
    ],
}
